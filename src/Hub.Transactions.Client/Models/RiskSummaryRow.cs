// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Hub.Transactions.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class RiskSummaryRow
    {
        /// <summary>
        /// Initializes a new instance of the RiskSummaryRow class.
        /// </summary>
        public RiskSummaryRow()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RiskSummaryRow class.
        /// </summary>
        public RiskSummaryRow(System.DateTime? transactionDate = default(System.DateTime?), string globalProperty = default(string), string globalId = default(string), string bank = default(string), string bankId = default(string), string corporate = default(string), string corporateId = default(string), string mid = default(string), string merchant = default(string), string merchantId = default(string), string responseCode = default(string), string responseDescription = default(string), string product = default(string), string transactionType = default(string), int? count = default(int?), string status = default(string), double? statusPercentage = default(double?))
        {
            TransactionDate = transactionDate;
            GlobalProperty = globalProperty;
            GlobalId = globalId;
            Bank = bank;
            BankId = bankId;
            Corporate = corporate;
            CorporateId = corporateId;
            Mid = mid;
            Merchant = merchant;
            MerchantId = merchantId;
            ResponseCode = responseCode;
            ResponseDescription = responseDescription;
            Product = product;
            TransactionType = transactionType;
            Count = count;
            Status = status;
            StatusPercentage = statusPercentage;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transactionDate")]
        public System.DateTime? TransactionDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "global")]
        public string GlobalProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "globalId")]
        public string GlobalId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bank")]
        public string Bank { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bankId")]
        public string BankId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "corporate")]
        public string Corporate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "corporateId")]
        public string CorporateId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mid")]
        public string Mid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "merchant")]
        public string Merchant { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "merchantId")]
        public string MerchantId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "responseCode")]
        public string ResponseCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "responseDescription")]
        public string ResponseDescription { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "product")]
        public string Product { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transactionType")]
        public string TransactionType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "count")]
        public int? Count { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "statusPercentage")]
        public double? StatusPercentage { get; set; }

    }
}
