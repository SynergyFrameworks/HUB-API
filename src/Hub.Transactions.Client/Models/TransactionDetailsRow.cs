// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Hub.Transactions.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class TransactionDetailsRow
    {
        /// <summary>
        /// Initializes a new instance of the TransactionDetailsRow class.
        /// </summary>
        public TransactionDetailsRow()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TransactionDetailsRow class.
        /// </summary>
        public TransactionDetailsRow(int? id = default(int?), string originalPaymentID = default(string), string merchantTransactionID = default(string), string apcTransactionID = default(string), System.DateTime? date = default(System.DateTime?), string mid = default(string), string channelType = default(string), string merchantId = default(string), string providerReference = default(string), string transactionType = default(string), double? amount = default(double?), string currency = default(string), string productId = default(string), string product = default(string), string responseCode = default(string), string providerResponse = default(string), System.DateTime? responseTimestamp = default(System.DateTime?), double? processingTime = default(double?), string customerEmailAddress = default(string), string billingAddressCustomerName = default(string), string billingAddressStreet1 = default(string), string billingAddressCity = default(string), string billingAddressCountry = default(string), string shippingAddressCustomerName = default(string), string shippingAddressStreet1 = default(string), string shippingAddressCity = default(string), string shippingAddressCountry = default(string), string customerTelNo = default(string), string customerID = default(string), string customerIPAddress = default(string), string customerDateOfBirth = default(string), string customerSocialID = default(string), string preApprovalStatus = default(string), bool? eligibleForCancel = default(bool?), bool? eligibleForCapture = default(bool?), bool? eligibleForRefund = default(bool?), double? amountEligibleForCancel = default(double?), double? amountEligibleForCapture = default(double?), double? amountEligibleForRefund = default(double?), string paymentMethod = default(string), string cardType = default(string), string transactionResponse = default(string), string providerResponseCode = default(string), string providerResponseCodeDescription = default(string))
        {
            Id = id;
            OriginalPaymentID = originalPaymentID;
            MerchantTransactionID = merchantTransactionID;
            ApcTransactionID = apcTransactionID;
            Date = date;
            Mid = mid;
            ChannelType = channelType;
            MerchantId = merchantId;
            ProviderReference = providerReference;
            TransactionType = transactionType;
            Amount = amount;
            Currency = currency;
            ProductId = productId;
            Product = product;
            ResponseCode = responseCode;
            ProviderResponse = providerResponse;
            ResponseTimestamp = responseTimestamp;
            ProcessingTime = processingTime;
            CustomerEmailAddress = customerEmailAddress;
            BillingAddressCustomerName = billingAddressCustomerName;
            BillingAddressStreet1 = billingAddressStreet1;
            BillingAddressCity = billingAddressCity;
            BillingAddressCountry = billingAddressCountry;
            ShippingAddressCustomerName = shippingAddressCustomerName;
            ShippingAddressStreet1 = shippingAddressStreet1;
            ShippingAddressCity = shippingAddressCity;
            ShippingAddressCountry = shippingAddressCountry;
            CustomerTelNo = customerTelNo;
            CustomerID = customerID;
            CustomerIPAddress = customerIPAddress;
            CustomerDateOfBirth = customerDateOfBirth;
            CustomerSocialID = customerSocialID;
            PreApprovalStatus = preApprovalStatus;
            EligibleForCancel = eligibleForCancel;
            EligibleForCapture = eligibleForCapture;
            EligibleForRefund = eligibleForRefund;
            AmountEligibleForCancel = amountEligibleForCancel;
            AmountEligibleForCapture = amountEligibleForCapture;
            AmountEligibleForRefund = amountEligibleForRefund;
            PaymentMethod = paymentMethod;
            CardType = cardType;
            TransactionResponse = transactionResponse;
            ProviderResponseCode = providerResponseCode;
            ProviderResponseCodeDescription = providerResponseCodeDescription;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "originalPaymentID")]
        public string OriginalPaymentID { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "merchantTransactionID")]
        public string MerchantTransactionID { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "apcTransactionID")]
        public string ApcTransactionID { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "date")]
        public System.DateTime? Date { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mid")]
        public string Mid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "channelType")]
        public string ChannelType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "merchantId")]
        public string MerchantId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "providerReference")]
        public string ProviderReference { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transactionType")]
        public string TransactionType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "amount")]
        public double? Amount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currency")]
        public string Currency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "productId")]
        public string ProductId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "product")]
        public string Product { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "responseCode")]
        public string ResponseCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "providerResponse")]
        public string ProviderResponse { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "responseTimestamp")]
        public System.DateTime? ResponseTimestamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "processingTime")]
        public double? ProcessingTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "customerEmailAddress")]
        public string CustomerEmailAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "billingAddressCustomerName")]
        public string BillingAddressCustomerName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "billingAddressStreet1")]
        public string BillingAddressStreet1 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "billingAddressCity")]
        public string BillingAddressCity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "billingAddressCountry")]
        public string BillingAddressCountry { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shippingAddressCustomerName")]
        public string ShippingAddressCustomerName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shippingAddressStreet1")]
        public string ShippingAddressStreet1 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shippingAddressCity")]
        public string ShippingAddressCity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shippingAddressCountry")]
        public string ShippingAddressCountry { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "customerTelNo")]
        public string CustomerTelNo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "customerID")]
        public string CustomerID { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "customerIPAddress")]
        public string CustomerIPAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "customerDateOfBirth")]
        public string CustomerDateOfBirth { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "customerSocialID")]
        public string CustomerSocialID { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "preApprovalStatus")]
        public string PreApprovalStatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "eligibleForCancel")]
        public bool? EligibleForCancel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "eligibleForCapture")]
        public bool? EligibleForCapture { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "eligibleForRefund")]
        public bool? EligibleForRefund { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "amountEligibleForCancel")]
        public double? AmountEligibleForCancel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "amountEligibleForCapture")]
        public double? AmountEligibleForCapture { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "amountEligibleForRefund")]
        public double? AmountEligibleForRefund { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "paymentMethod")]
        public string PaymentMethod { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cardType")]
        public string CardType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transactionResponse")]
        public string TransactionResponse { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "providerResponseCode")]
        public string ProviderResponseCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "providerResponseCodeDescription")]
        public string ProviderResponseCodeDescription { get; set; }

    }
}
