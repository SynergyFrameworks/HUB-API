// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Hub.Transactions.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class TransactionsRow
    {
        /// <summary>
        /// Initializes a new instance of the TransactionsRow class.
        /// </summary>
        public TransactionsRow()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TransactionsRow class.
        /// </summary>
        public TransactionsRow(System.DateTime? date = default(System.DateTime?), string id = default(string), string transactionID = default(string), string globalId = default(string), string globalProperty = default(string), string bankID = default(string), string bank = default(string), string corporateId = default(string), string corporate = default(string), string mid = default(string), string merchant = default(string), string merchantTransactionID = default(string), string providerTransactionNumber = default(string), string transactionType = default(string), string product = default(string), string apiId = default(string), string responseCode = default(string), string responseCodeDescription = default(string), string paymentMethod = default(string), double? amount = default(double?), string currency = default(string), string customerEmailAddress = default(string), string accountHolder = default(string), string merchantId = default(string), string bankId = default(string), string bin = default(string), string cryptoId = default(string), double? exchangeRate = default(double?), double? exchangeAmount = default(double?), string exchangeCurrency = default(string), System.DateTime? settlementDate = default(System.DateTime?), string transactionSource = default(string), string transactionSourceName = default(string), string cardLastFourDigits = default(string), string cardType = default(string), string userID = default(string), string uiUserID = default(string), string bankMerchantID = default(string), string token = default(string), string ipAddress = default(string), string terminalID = default(string), string paymentID = default(string), string bankAuthID = default(string), string providerResponse = default(string), string expiraryMonth = default(string), string expiraryYear = default(string), string acquirer = default(string), string providerResponseCode = default(string), string providerResponseCodeDescription = default(string), System.DateTime? originalSettlementDate = default(System.DateTime?), string unmatchedTransaction = default(string))
        {
            Date = date;
            Id = id;
            TransactionID = transactionID;
            GlobalId = globalId;
            GlobalProperty = globalProperty;
            BankID = bankID;
            Bank = bank;
            CorporateId = corporateId;
            Corporate = corporate;
            Mid = mid;
            Merchant = merchant;
            MerchantTransactionID = merchantTransactionID;
            ProviderTransactionNumber = providerTransactionNumber;
            TransactionType = transactionType;
            Product = product;
            ApiId = apiId;
            ResponseCode = responseCode;
            ResponseCodeDescription = responseCodeDescription;
            PaymentMethod = paymentMethod;
            Amount = amount;
            Currency = currency;
            CustomerEmailAddress = customerEmailAddress;
            AccountHolder = accountHolder;
            MerchantId = merchantId;
            BankId = bankId;
            Bin = bin;
            CryptoId = cryptoId;
            ExchangeRate = exchangeRate;
            ExchangeAmount = exchangeAmount;
            ExchangeCurrency = exchangeCurrency;
            SettlementDate = settlementDate;
            TransactionSource = transactionSource;
            TransactionSourceName = transactionSourceName;
            CardLastFourDigits = cardLastFourDigits;
            CardType = cardType;
            UserID = userID;
            UiUserID = uiUserID;
            BankMerchantID = bankMerchantID;
            Token = token;
            IpAddress = ipAddress;
            TerminalID = terminalID;
            PaymentID = paymentID;
            BankAuthID = bankAuthID;
            ProviderResponse = providerResponse;
            ExpiraryMonth = expiraryMonth;
            ExpiraryYear = expiraryYear;
            Acquirer = acquirer;
            ProviderResponseCode = providerResponseCode;
            ProviderResponseCodeDescription = providerResponseCodeDescription;
            OriginalSettlementDate = originalSettlementDate;
            UnmatchedTransaction = unmatchedTransaction;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "date")]
        public System.DateTime? Date { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transactionID")]
        public string TransactionID { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "globalId")]
        public string GlobalId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "global")]
        public string GlobalProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bank_ID")]
        public string BankID { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bank")]
        public string Bank { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "corporateId")]
        public string CorporateId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "corporate")]
        public string Corporate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mid")]
        public string Mid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "merchant")]
        public string Merchant { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "merchantTransactionID")]
        public string MerchantTransactionID { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "providerTransactionNumber")]
        public string ProviderTransactionNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transactionType")]
        public string TransactionType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "product")]
        public string Product { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "apiId")]
        public string ApiId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "responseCode")]
        public string ResponseCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "responseCodeDescription")]
        public string ResponseCodeDescription { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "paymentMethod")]
        public string PaymentMethod { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "amount")]
        public double? Amount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currency")]
        public string Currency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "customerEmailAddress")]
        public string CustomerEmailAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "accountHolder")]
        public string AccountHolder { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "merchantId")]
        public string MerchantId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bankId")]
        public string BankId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bin")]
        public string Bin { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cryptoId")]
        public string CryptoId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "exchangeRate")]
        public double? ExchangeRate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "exchangeAmount")]
        public double? ExchangeAmount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "exchangeCurrency")]
        public string ExchangeCurrency { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "settlementDate")]
        public System.DateTime? SettlementDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transactionSource")]
        public string TransactionSource { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transactionSourceName")]
        public string TransactionSourceName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cardLastFourDigits")]
        public string CardLastFourDigits { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cardType")]
        public string CardType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "userID")]
        public string UserID { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "uiUserID")]
        public string UiUserID { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bankMerchantID")]
        public string BankMerchantID { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "token")]
        public string Token { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ipAddress")]
        public string IpAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "terminalID")]
        public string TerminalID { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "paymentID")]
        public string PaymentID { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bankAuthID")]
        public string BankAuthID { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "providerResponse")]
        public string ProviderResponse { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "expiraryMonth")]
        public string ExpiraryMonth { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "expiraryYear")]
        public string ExpiraryYear { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "acquirer")]
        public string Acquirer { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "providerResponseCode")]
        public string ProviderResponseCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "providerResponseCodeDescription")]
        public string ProviderResponseCodeDescription { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "originalSettlementDate")]
        public System.DateTime? OriginalSettlementDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "unmatchedTransaction")]
        public string UnmatchedTransaction { get; set; }

    }
}
